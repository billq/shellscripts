#!/bin/bash
#
# @(#) space2_ - De-Windows a filesystem
# @(#) WRQ
#
#
# This script attempts to sanitize a directory heirarchy managled by Windows
# scourge on lack of file naming conventions.  It deletes nasty characters
# from file/directory names, and replaces the space ( ) with an underscore (_).
#
# We start by calculating the maximum directory depth, then start fixing
# directory names at the lowest level.  We step up one level and continue
# cleaning, eventually ending up cleaning the highest level directory.
# Once the entire directory structure is cleaned, we clean file names.
# 
# The following characters are removed:
#    !"#$&'()*/;<>@[]{}^`| and <cr> (\r)
# Additionally, all control characters are removed.
#
# Octal values for these are:
#    \015	\r
#    \041	!
#    \042	"
#    \043	#
#    \044	$
#    \046	&
#    \047	'
#    \050	(
#    \051	)
#    \052	*
#    \073	;
#    \074	<
#    \076	>
#    \100	@
#    \133	[
#    \135	]
#    \173	{
#    \175	}
#    \136	^
#    \140	`
#    \174	|

# man ascii
DLIST='\015 \173 \175 \076 \074 \140 \042 \047 \050 \051 \133 \135 \041 \043 \073 \174 \044 \100 \046 \052 \136'

spinner () {
  N=${N:-0}
  case $N in
  0) echo -e "\r| \c"
     N=1		;;
  1) echo -e "\r/ \c"
     N=2		;;
  2) echo -e "\r- \c"
     N=3		;;
  3) echo -e "\r\\ \c"
     N=0		;;
  esac
}

MYTMP=/tmp/space2_.$$
mkdir $MYTMP 2>/dev/null
if [ $? -ne 0 ]
then
  echo -e "
Can't creat tmp dir ${MYTMP}.  This could be for two reasons:

  1. Someone else is using `basename $0` on `hostname`.
  2. A previous run of `basename $0` was aborted and not cleaned up.

Take the appropriate action, and retry.
"
  exit 1
fi

USAGE="`basename $0` [-d starting_directory]"

if [ $# -ne 0 ]
then
 while getopts td: i 2>/dev/null
  do
   case $i in
   t) TEST="0"
   ;;
   d) CDIR="$OPTARG"   
      if [ -d $CDIR ]
      then
        DIR=$CDIR
      fi
   ;;
   \?)echo -e "USAGE: $USAGE"
      exit 2
   ;;
   esac
  done
  shift `expr $OPTIND - 1`
fi

if [ -z $DIR ]
then
  DIR=/etc/hosts
  while [ ! -d $DIR ]
  do
    echo -e "Starting dir? [$PWD] \c"
    read SDIR
    DIR=${SDIR:-$PWD}
  done
fi

cd $DIR
if [ $? -ne 0 ]
then
  echo -e "cd to $DIR failed.  Bailing out"
  exit 1
fi

RESET=1
while [ "$RESET" = "1" ]
do
  echo -e "Calculating directory depth..."
  DEPTH=$(find . -xdev -type d|tr -d "[:alnum:] $DLIST \054 \055 = + _ ."|sort -u|tail -1|wc|awk '{print $3}')
  echo -e "done.  Max depth = $DEPTH"

  MAXDEPTH=1
  echo -e "Fixing directory names..."
  while (( $MAXDEPTH <= $DEPTH ))
  do
    find $DIR -xdev -maxdepth $MAXDEPTH -type d|while read I
    do
      spinner
      NDIR=`echo -e "$I"|tr '\040' '_'|tr -d "$DLIST"|tr [:upper:] [:lower:]`
      if [ "$NDIR" != "$I" ]
      then
        if [ ! -d "$NDIR" ]
        then
          mv "$I" $NDIR
          if [ $? -ne 0 ]
          then
            echo -e "Move of $I to $NDIR bombed. Restarting."
            RESET=1
          fi
        else
          echo -e "Dir $NDIR already exits.  Appending .$$ for work-around."
          mv "$I" ${NDIR}.$$
          if [ $? -ne 0 ]
          then
            echo -e "Move of $I to $NDIR.$$ bombed. Restarting."
            RESET=1
          else
            if (( $MAXDEPTH = 1 ))
            then
              DIR=${DIR}.$$
              RESET=1
            fi
          fi
        fi
      fi
    done
    MAXDEPTH=$((MAXDEPTH + 1))
  done
  RESET=0
done


echo -e "Done with directory cleanup."

echo -e "Generating file working list ...\c"
find $DIR -xdev -type f > $MYTMP/ftoc
echo -e "done."

echo -e "Fixing file names..."
sort $MYTMP/ftoc|while read I
do
  NEW=`echo -e "${I}"|tr '\040' '_'|tr -d "$DLIST"|tr [:upper:] [:lower:]`
  
  if [ "$NEW" != "$I" ]
  then
    mv "${I}" ${NEW} 2>/dev/null
    if [ $? -ne 0 ]
    then
      echo -e "The move of $I to $NEW failed.  Bailing out"
      exit 1
    fi
    spinner
  fi

done
echo -e "Done with file cleanup."

echo -e "Your $DIR has been cleaned."
rm -fr $MYTMP
