#!/bin/ksh
#               
################################################################################
#                   @(#)Copyright (c) 1992 William R. Quayle                   #
#                             All Rights Reserved                              #
################################################################################
#                                                                              #
# This is free software.  It comes  with absolutely  NO WARRENTY  expressed or #
# implied.                                                                     #
#                            USE AT YOUR OWN RISK!                             #
#                                                                              #
# Permission is granted to use, modify, and distribute copies of this software #
# software  provided  the following conditions are met:                        #
#                                                                              #
#      1) that that the above copyright notice and this notice                 #
#         are preserved in all copies and that due credit be given             #
#         to the author.                                                       #
#                                                                              #
#      2) that any changes to this code are clearly commented                  #
#         as such so that the author does get blamed for bugs                  #
#         other than his own.                                                  #
#                                                                              #
#      Please send copies of changes and bug-fixes to:                         #
#                                                                              #
#                       billq@technologist.com        			       #
#                                                                              #
################################################################################

TAPE_MASTER=blkbird
ME=`/bin/hostname`
LIB=~quayle/lib/tapes

if [ $# != 0 ]
then
	echo "
------------------------------------------------------------------
	rmttar is an interactive script for reading and
	writting tar tapes over the network.

	No options required, thank you.
"
fi

HAVEATIT="NO"

while [ "$HAVEATIT" = "NO" ]
do
	echo "

------------------------------------------------------------------
  RMTTAR writes or reads a tar tape mounted on a remote host.

	NOTE: The tape is on the \"remote\" host.  You should
	      rlogin to wherever the files are pysically located.

  Usage is interactive.  All defaults are in square brackets.
------------------------------------------------------------------

"
	PROCEED="NO"

	while [ "$PROCEED" = "NO" ]
	do
		/bin/echo -n "
------------------------------------------------------------------
Do you want to Read, Write, see the Table of contents, or Quit?

(r/w/t/q) -> "
		read OPERATION

		case $OPERATION in
		r*|R*)	OPERATION="read"
			PROCEED="YES"
		;;
		w*|W*)	OPERATION="write"
			PROCEED="YES"
		;;
		t*|T*)	OPERATION="contents"
			PROCEED="YES"
		;;
		q*|Q*)	echo "Bye!"
			exit 1
		;;
		*)	PROCEED="NO"
			echo "Operation not understood"
		;;
		esac

	done

	/bin/echo -n "
------------------------------------------------------------------
Which machine is the remote host? 

[$TAPE_MASTER]  -> "
	read RMTHOST

	if [ "$RMTHOST" = "" ]
	then
		RMTHOST=$TAPE_MASTER
	fi

	if [ "$ME" = "$RMTHOST" ]
	then
		PREFIX=""
	else
		PREFIX="rsh $RMTHOST"
	fi
	$PREFIX /bin/true >/dev/null 2>&1
	CANT_REACH=$?

	while [ "$CANT_REACH" != "0" ]
	do
		echo "ERROR:$0:Remote execution denied on $RMTHOST"
		echo "If you will be using an alias i.d. for rsh, "
		echo "enter that i.d.,"
		echo "else enter Q to quit, and fix your .rhosts file"
		/bin/echo -n "
		-> "
		read ALIAS
		case $ALIAS in
		""|Q)	exit	;;
		*)	ALIAS=$ALIAS
		esac
		$PREFIX -l $ALIAS /bin/true >/dev/null 2>&1
		CANT_REACH=$?
		if [ "$CANT_REACH" = "0" ]
		then
			PREFIX="$PREFIX -l $ALIAS"
			echo $PREFIX
		fi
	done

	TAPETYPE=`cat $LIB|grep "${RMTHOST}:"|cut -f3 -d':' 2>/dev/null`

	typeset NUM
	NUM=`echo $TAPETYPE|wc -w`

	if [ $NUM -gt 1 ]
	then

		if [ "`echo $TAPETYPE|grep REEL`" != "" ]
		then

			SPEWLINE="
	a: 1/4 inch Data Cartridge
	b: 2.2 Gbyte 8mm Video Cartridge
	c: 1/2 inch Mag Tape Reel"

		else

			SPEWLINE="
	a: 1/4 inch Data Cartridge
	b: 2.2 Gbyte 8mm Video Cartridge"

		fi

		GOFORIT="NO"

		while [ "$GOFORIT" = "NO" ]
		do
				/bin/echo -n "
------------------------------------------------------------------
$RMTHOST supports the following tape devices:
$SPEWLINE

Which device will you be using?
	
		-> "
			read CHOICE

			case $CHOICE in
			a)	TAPEDRIVE="`cat $LIB|grep ${RMTHOST}:|grep CART|cut -f2 -d':'`"
				GOFORIT=YES
			;;
			b)	TAPEDRIVE="`cat $LIB|grep ${RMTHOST}:|grep 8mm|cut -f2 -d':'`"
				GOFORIT=YES
			;;
			c)	TAPEDRIVE="`cat $LIB|grep ${RMTHOST}:|grep REEL|cut -f2 -d':'`"
				GOFORIT=YES
			;;
			esac

		done

	elif [ $NUM -eq 1 ]
	then
			TAPEDRIVE="`cat $LIB|grep ${RMTHOST}:|cut -f2 -d':'`"
			echo "Using $TAPEDRIVE on $RMTHOST"
	else

		echo "Determining tape information on $RMTHOST, please stand by..."
		for i in nrst0 nrst1 nrmt0 nrmt1
		do
			$PREFIX mt -f /dev/$i stat >> /tmp/tapestat.$RMTHOST 2>&1
			HASIT="`grep tape /tmp/tapestat.$RMTHOST`"
			if [ "$HASIT" != "" ]
			then
				UKTAPE="$i"
				rm /tmp/tapestat.$RMTHOST
				/bin/echo -n "Found a drive on $RMTHOST,
it's called /dev/$i

Is this the one you want? 

	[Y|n] -> "
				read MYDRIVE
				case $MYDRIVE in
				""|Y*|y*)	break 	;;
				*)		/bin/echo -n "will continue to search..."
						UKTAPE=""
							;;
				esac
			fi
		done
		if [ "$UKTAPE" = "" ]
		then
			echo "
	ERROR: Can't find a tape drive on $RMTHOST."
			rm /tmp/tapestat.$RMTHOST > /dev/null 2>&1
			exit 1
		fi
		TAPEDRIVE=$UKTAPE
	fi
	if [ "$OPERATION" = "read" ] 
	then
		/bin/echo -n "
------------------------------------------------------------------
What is the destination directory? (full or relative path)

	[.]  -> "
		read DESTINATION

		case $DESTINATION in
		""|".") DESTINATION="."
		;;
		*)	DESTINATION="$DESTINATION"
		;;
		esac

	elif [ "$OPERATION" = "contents" ]
	then
		CONFLICT=yes

		while [ "$CONFLICT" = "yes" ]
		do
			/bin/echo -n "
------------------------------------------------------------------
Please give the table of contents file a home...full path and include
what the file should be named.

	ex: /b2/foobar/rje/toc.tape1

	-> "
			read DESTINATION
			DESTDIR=`dirname $DESTINATION`
			DESTFILE=`basename $DESTINATION`

			if [ -f "$DESTINATION" ] || [ ! -d "$DESTDIR" ]
			then
				CONFLICT=yes
				echo "
!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-
OOPS!  Either $DESTDIR doesn't exist, or you've already got a file by
the name of $DESTFILE living there... Reconsider, and ...
!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-"
			else
				CONFLICT=nope
			fi

		done

	else

		/bin/echo -n "
------------------------------------------------------------------
What is the file or directory to write? 

[*]
	     -> "
		read SOURCE
		SOURCE="${SOURCE:-*}"
		cd `dirname $SOURCE`

		if [ "$1" = "-d" ]
		then
			echo `pwd`
			echo `dirname $SOURCE` "= dirname $SOURCE"
			echo `basename $SOURCE` "= basename $SOURCE"
			SOURCE=`echo $SOURCE|sed 's/\/$//'`
			echo $SOURCE
			SOURCE=`basename $SOURCE`
			echo $SOURCE
		fi

		if [ "`basename $SOURCE`" = "" ]
		then
			SOURCE=`echo $SOURCE|sed 's/\/$//'`
			SOURCE=`basename $SOURCE`
		elif [ "$SOURCE" != "*" ]
		then
			SOURCE=`basename $SOURCE`
		fi

		PROCEED=NO

		while [ "$PROCEED" = "NO" ]
		do
			/bin/echo -n "
------------------------------------------------------------------
Shall we follow symbolic links? (y/n)

	   [y]  -> "
			read LINK

			case $LINK in
			""|y*) 	OPTIONS=chvf
				PROCEED=YES
			;;
			n*)	OPTIONS=cvf
				PROCEED=YES
			;;
			esac

		done

		PROCEED=NO

		while [ "$PROCEED" = "NO" ]
		do
			/bin/echo -n "
------------------------------------------------------------------
Shall we exclude core, *.o, SCCS, errs, and a.out? (y/n)

	   [y]  -> "
			read EXCLUDE

			case $EXCLUDE in
			""|y*) 	OPTIONS=${OPTIONS}FF
				PROCEED=YES
			;;
			n*)	OPTIONS=$OPTIONS
				PROCEED=YES
			;;
			esac

		done

		PROCEED="NO"

		while [ "$PROCEED" = "NO" ]
		do
			/bin/echo -n "
------------------------------------------------------------------
What is the blocking factor?

	* The \"blocking factor\" is based on 512 byte blocks.
	* If the tape is destined for System V environment, specify
	* 20 (the maximum), if it's going to/coming from a Sun or
	* BSD environment, specify 126 (the optimum). Specifying -
	* will disable blocking factor test or set.

	[126] -> "
			read BLKING
	
			case $BLKING in
			""|126) BLKING="126"
				OPTIONS=${OPTIONS}b
				PROCEED="YES"
			;;
			-)	OPTIONS=""
				PROCEED="YES"
			;;
			*)	BLKING=$BLKING
				OPTIONS=${OPTIONS}b
				PROCEED="YES"
			;;
			esac

		done


	fi

	FREE=no

	while [ "$FREE" = "no" ]
	do
		echo "
------------------------------------------------------------------
Testing availability of the drive...
"
		$PREFIX mt -f /dev/${TAPEDRIVE} status
		echo "
------------------------------------------------------------------
If the above status line indicates the drive is currently in use,
please type n at the following prompt.  You may pause at this point
to wait for the current user to finish using the tape drive.
"
		/bin/echo -n "
------------------------------------------------------------------
Is the drive available?
	   [y]  -> "
		read FREE

		case $FREE in
		n*)	FREE=no
		;;
		""|y*)	FREE=yes
		;;
		q*)	exit
		;;
		*)	echo "Reply not understood"
			FREE=no
		;;
		esac
	done
	case $OPERATION in
	r*)
	/bin/echo -n "
------------------------------------------------------------------
Do you want to fast forward to the next file on the tape? (y/n)
				-> "
	read ENDOTAPE

	case $ENDOTAPE in
	n*)	APPEND="NO"
	;;
	y*)	APPEND="YES"
		/bin/echo -n "Tape fastforwarding, stand by ..."
		$PREFIX mt -f /dev/${TAPEDRIVE} fsf
		echo "done. 
	;;
	*)	echo "Reply not understood. Exiting."
		/bin/echo -n "Tape rewinding, stand by ..."
		$PREFIX mt -f /dev/${TAPEDRIVE} rew
		echo "done. 

	;;
	esac
	;;
	w*)
	/bin/echo -n "
------------------------------------------------------------------
Do you want to append to the end of the tape? (y/n)
				-> "
	read ENDOTAPE

	case $ENDOTAPE in
	n*)	APPEND="NO"
	;;
	y*)	APPEND="YES"
		/bin/echo -n "Tape fastforwarding, stand by ..."
		$PREFIX mt -f /dev/${TAPEDRIVE} eom
		echo "done. 
	;;
	*)	echo "Reply not understood. Exiting."
		/bin/echo -n "Tape rewinding, stand by ..."
		$PREFIX mt -f /dev/${TAPEDRIVE} rew
		echo "done. 

	;;
	esac
	;;
	*)
		echo "Reply not understood..."
	;;
	esac
	echo "
------------------------------------------------------------------
O.K. to execute the following? (y/n)
"

	case $OPERATION in
	r*) CMD="cd $DESTINATION;$PREFIX dd if=/dev/${TAPEDRIVE} | tar -xpvBf -"
		echo $CMD
	;;
	w*) CMD="tar -$OPTIONS - $BLKING "$SOURCE" | $PREFIX dd of=/dev/${TAPEDRIVE} bs=${BLKING}b"
		echo $CMD
	;;
	c*) CMD="cd $DESTDIR;$PREFIX dd if=/dev/${TAPEDRIVE} bs=126b | tar -tvfb - 126>>$DESTFILE"
		echo $CMD
	;;
	esac

	/bin/echo -n "
	[Yes!] -> "
	read GOFORIT

	case $GOFORIT in
	""|y*) 	echo "executing..."
		echo $CMD |/bin/sh
		echo "done."

		if [ "$?" != "0" ]
		then
			echo "This seems to have failed...we'll try again..."
			HAVEATIT="NO"
		else

			case $OPERATION in
			write)	/bin/echo -n "
------------------------------------------------------------------
Do you have more files to write to the same tape? (y/n)
				-> "
				read MOREFILES

				case $MOREFILES in
				y*)	HAVEATIT="NO"
				;;
				n*)	HAVEATIT="YES"
					/bin/echo -n "Tape rewinding, stand by ..."
					$PREFIX mt -f /dev/${TAPEDRIVE} rew
					echo "done. 

Thanks for using rmttar.  Report bugs to ihlpm!billq"
				;;
				*)	HAVEATIT="YES"
					echo "Reply not understood. Exiting."
					/bin/echo -n "Tape rewinding, stand by ..."
					$PREFIX mt -f /dev/${TAPEDRIVE} rew
					echo "done. 

Thanks for using rmttar.  Report bugs to ihlpa!billq"
				;;
				esac

			;;
			read)
				/bin/echo -n "
Do you have more files to read from the same tape? (y/n)
				-> "
				read MOREFILES

				case $MOREFILES in
				y*)	HAVEATIT="NO"
					/bin/echo -n "Forwarding the tape to the next file,
stand by ..."
					$PREFIX mt -f /dev/${TAPEDRIVE} fsf 1
					echo "done."
				;;
				n*)	HAVEATIT="YES"
					/bin/echo -n "Tape rewinding, stand by ..."
					$PREFIX mt -f /dev/${TAPEDRIVE} rew
					echo "done. 

Thanks for using rmttar.  Report bugs to billq@fnal.fnal.gov"
				;;
				*)	HAVEATIT="YES"
					echo "Reply not understood. Exiting."
					/bin/echo -n "Tape rewinding, stand by ..."
					$PREFIX mt -f /dev/${TAPEDRIVE} rew
					echo "done. 

Thanks for using rmttar.  Report bugs to billq@fnal.fnal.gov"
				;;
				esac

			;;
			esac

		fi

	;;
	*)	echo "Restarting..."
		HAVEATIT="NO"
	;;
	esac
done
